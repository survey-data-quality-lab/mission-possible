<script type="text/javascript">
Qualtrics.SurveyEngine.addOnload(function () {
    const startTime    = Date.now();
    let page           = parseInt(Qualtrics.SurveyEngine.getEmbeddedData("page")) || 1;
﻿
    // Dummy interaction trackers
    let mouseMoved       = false;
    let mouseMoveCount   = 0;
    let clickCount       = 0;
    let keyCount         = 0;
    let pasted           = false;
    let copied           = false;
    let tabHidden        = false;
    let windowBlurred    = false;
    let scrollEventCount = 0;
    let eventLog         = [];
﻿
    // Event listeners (minimal)
    document.addEventListener("mousemove", () => {
        mouseMoveCount += 1;
        mouseMoved = true;
    });
﻿
    document.addEventListener("scroll", () => {
        scrollEventCount += 1;
    }, { passive: true });
﻿
    document.addEventListener("click", () => { clickCount += 1; });
﻿
    document.addEventListener("keydown", () => {
        keyCount += 1;
    });
﻿
    document.addEventListener("paste", () => {
        pasted = true;
        eventLog.push({ event: "PASTE", time: Date.now() });
    });
﻿
    document.addEventListener("copy", () => {
        copied = true;
        eventLog.push({ event: "COPY", time: Date.now() });
    });
﻿
    document.addEventListener("visibilitychange", () => {
        if (document.hidden) {
            tabHidden = true;
            eventLog.push({ event: "TAB_HIDDEN", time: Date.now() });
        } else {
            eventLog.push({ event: "TAB_VISIBLE", time: Date.now() });
        }
    });
﻿
    window.addEventListener("blur", () => {
        windowBlurred = true;
        eventLog.push({ event: "WINDOW_BLUR", time: Date.now() });
    });
﻿
    window.addEventListener("focus", () => {
        eventLog.push({ event: "WINDOW_FOCUS", time: Date.now() });
    });
﻿
    // CHANGED: use addOnPageSubmit instead of addOnUnload
    let submitted = false;
    Qualtrics.SurveyEngine.addOnPageSubmit(function(type) {
        if (submitted) return;
        submitted = true;
﻿
        const endTime    = Date.now();
        const timeOnPage = Math.round((endTime - startTime) / 1000);
﻿
        const questionIDs = Array.from(
            document.querySelectorAll('.QuestionOuter')
        ).map(el => el.id).filter(id => id.startsWith('QID'));
﻿
        const trackingEntry = {
            page: page,
            question_ids: questionIDs,
            start_time: startTime,
            time_on_page: timeOnPage,
            mouse_moved: mouseMoved,
            mouse_move_count: mouseMoveCount,
            click_count: clickCount,
            total_keys: keyCount,
            paste_detected: pasted,
            copy_detected: copied,
            tab_hidden: tabHidden,
            window_blurred: windowBlurred,
            scroll_event_count: scrollEventCount,
            event_log: eventLog,
            ts: Date.now()
        };
﻿
        const prev = Qualtrics.SurveyEngine.getEmbeddedData("tracking_json");
        const list = prev ? JSON.parse(prev) : [];
        list.push(trackingEntry);
        Qualtrics.SurveyEngine.setEmbeddedData("tracking_json", JSON.stringify(list));
﻿
        // Update page counter based on navigation direction
        if (type === "next") {
            Qualtrics.SurveyEngine.setEmbeddedData("page", page + 1);
        } else if (type === "prev") {
            Qualtrics.SurveyEngine.setEmbeddedData("page", Math.max(1, page - 1));
        }
    });
});
</script>
